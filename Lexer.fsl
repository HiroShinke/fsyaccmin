{

// Opens methods related to fslex.exe
open FSharp.Text.Lexing
open Parser

let newline (lexbuf: LexBuffer<_>) = 
  lexbuf.StartPos <- lexbuf.StartPos.NextLine

let lexeme = FSharp.Text.Lexing.LexBuffer<_>.LexemeString

}

let intNum     = '-'? ['0'-'9']+
let whiteSpace = ' ' | '\t'
let newline    = '\n' | '\r' '\n'

rule tokenstream = parse
| intNum { INT (lexeme lexbuf |> int) }
| '+'    { PLUS }
| '-'    { MINUS}
| '*'    { TIMES }
| '/'    { DIVIDE }
| '('    { LPAREN }
| ')'    { RPAREN }
| whiteSpace { tokenstream lexbuf }
| newline { newline lexbuf; tokenstream lexbuf }
| eof     { EOF }
| _       { failwithf "unrecognized input: '%s'" <| lexeme lexbuf }

